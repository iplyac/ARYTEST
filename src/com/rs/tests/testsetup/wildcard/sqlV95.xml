<?xml version="1.0" encoding="UTF-8" standalone="no"?><testcasesetup><SQL><statement stmt_id="0">CREATE DATABASE PARTITION GROUP MyPartitionGROUP ON ALL DBPARTITIONNUMS</statement><statement stmt_id="1">create regular tablespace "arympts" in database partition group MyPartitionGROUP</statement><statement stmt_id="2">CREATE LARGE TABLESPACE ARYMPTESTTS IN DATABASE PARTITION GROUP MyPartitionGROUP 	 MANAGED BY AUTOMATIC STORAGE 	 AUTORESIZE YES 	 INITIALSIZE 32 M 	 MAXSIZE NONE 	 EXTENTSIZE 32	 PREFETCHSIZE AUTOMATIC	 OVERHEAD 7.500000	 TRANSFERRATE 0.060000 	 DROPPED TABLE RECOVERY ON</statement><statement stmt_id="3">CREATE LARGE TABLESPACE ARYMPTESTXMLTS IN DATABASE PARTITION GROUP MyPartitionGROUP 	 MANAGED BY AUTOMATIC STORAGE 	 AUTORESIZE YES 	 INITIALSIZE 32 M 	 MAXSIZE NONE 	 EXTENTSIZE 32	 PREFETCHSIZE AUTOMATIC	 OVERHEAD 7.500000	 TRANSFERRATE 0.060000 	 DROPPED TABLE RECOVERY ON</statement><statement stmt_id="4">ALTER TABLESPACE SYSCATSPACE      PREFETCHSIZE AUTOMATIC      OVERHEAD 7.500000      FILE SYSTEM CACHING       TRANSFERRATE 0.060000</statement><statement stmt_id="5">ALTER TABLESPACE TEMPSPACE1      PREFETCHSIZE AUTOMATIC      OVERHEAD 7.500000      FILE SYSTEM CACHING       TRANSFERRATE 0.060000</statement><statement stmt_id="6">ALTER TABLESPACE "arympts"      PREFETCHSIZE AUTOMATIC      OVERHEAD 7.500000      FILE SYSTEM CACHING       TRANSFERRATE 0.060000</statement><statement stmt_id="7">CREATE SEQUENCE "ARYMP"."SAMPSEQUENCE" AS BIGINT	MINVALUE 1 MAXVALUE 9223372036854775807	START WITH 1 INCREMENT BY 1	CACHE 20 NO CYCLE NO ORDER</statement><statement stmt_id="8"> CREATE TABLE "ARYMP"."CL_SCHED"  (		  "CLASS_CODE" CHAR(7) not null primary key,		  "DAY" SMALLINT , 		  "STARTING" TIME , 		  "ENDING" TIME )   		 IN "arympts"</statement><statement stmt_id="9"> CREATE TABLE "ARYMP"."DEPARTMENT"  (		  "DEPTNO" CHAR(3) NOT NULL , 		  "DEPTNAME" VARCHAR(36) NOT NULL , 		  "MGRNO" CHAR(6) , 		  "ADMRDEPT" CHAR(3) NOT NULL , 		  "LOCATION" CHAR(16) )   		 IN "arympts"</statement><statement stmt_id="10">insert into arymp.department values ('HR', '"dd" ', 'alfie', 'HR', 'Newton' )</statement><statement stmt_id="11">ALTER TABLE "ARYMP"."DEPARTMENT" 	ADD CONSTRAINT "PK_DEPARTMENT" PRIMARY KEY		("DEPTNO")</statement><statement stmt_id="12">CREATE INDEX "ARYMP"."XDEPT2" ON "ARYMP"."DEPARTMENT" 		("MGRNO" ASC)		ALLOW REVERSE SCANS</statement><statement stmt_id="13">CREATE INDEX "ARYMP"."XDEPT3" ON "ARYMP"."DEPARTMENT" 		("ADMRDEPT" ASC)		ALLOW REVERSE SCANS</statement><statement stmt_id="14"> CREATE TABLE "ARYMP"."EMPLOYEE"  (		  "EMPNO" CHAR(6) NOT NULL , 		  "FIRSTNME" VARCHAR(12) NOT NULL , 		  "MIDINIT" CHAR(1) , 		  "LASTNAME" VARCHAR(15) NOT NULL , 		  "WORKDEPT" CHAR(3) , 		  "PHONENO" CHAR(4) , 		  "HIREDATE" DATE , 		  "JOB" CHAR(8) , 		  "EDLEVEL" SMALLINT NOT NULL , 		  "SEX" CHAR(1) , 		  "BIRTHDATE" DATE , 		  "SALARY" DECIMAL(9,2) , 		  "BONUS" DECIMAL(9,2) , 		  "COMM" DECIMAL(9,2) )   		 IN "arympts"</statement><statement stmt_id="15">ALTER TABLE "ARYMP"."EMPLOYEE" 	ADD CONSTRAINT "PK_EMPLOYEE" PRIMARY KEY		("EMPNO")</statement><statement stmt_id="16">CREATE INDEX "ARYMP"."XEMP2" ON "ARYMP"."EMPLOYEE" 		("WORKDEPT" ASC)		ALLOW REVERSE SCANS</statement><statement stmt_id="17"> CREATE TABLE "ARYMP"."EMP_PHOTO"  (		  "EMPNO" CHAR(6) NOT NULL , 		  "PHOTO_FORMAT" VARCHAR(10) NOT NULL , 		  "PICTURE" BLOB(102400) LOGGED NOT COMPACT )   		 IN "arympts"</statement><statement stmt_id="18">ALTER TABLE "ARYMP"."EMP_PHOTO" 	ADD CONSTRAINT "PK_EMP_PHOTO" PRIMARY KEY		("EMPNO",		 "PHOTO_FORMAT")</statement><statement stmt_id="19"> CREATE TABLE "ARYMP"."EMP_RESUME"  (		  "EMPNO" CHAR(6) NOT NULL , 		  "RESUME_FORMAT" VARCHAR(10) NOT NULL , 		  "RESUME" CLOB(5120) LOGGED NOT COMPACT )   		 IN "arympts"</statement><statement stmt_id="20">ALTER TABLE "ARYMP"."EMP_RESUME" 	ADD CONSTRAINT "PK_EMP_RESUME" PRIMARY KEY		("EMPNO",		 "RESUME_FORMAT")</statement><statement stmt_id="21"> CREATE TABLE "ARYMP"."PROJECT"  (		  "PROJNO" CHAR(6) NOT NULL , 		  "PROJNAME" VARCHAR(24) NOT NULL WITH DEFAULT '' , 		  "DEPTNO" CHAR(3) NOT NULL , 		  "RESPEMP" CHAR(6) NOT NULL , 		  "PRSTAFF" DECIMAL(5,2) , 		  "PRSTDATE" DATE , 		  "PRENDATE" DATE , 		  "MAJPROJ" CHAR(6) )   		 IN "arympts"</statement><statement stmt_id="22">INSERT INTO ARYMP.PROJECT VALUES ( '000001', 'City Planning', 'HR', 'jdfj', 33, '2/3/2007', '1/4/2006', 'Sixty' )</statement><statement stmt_id="23">ALTER TABLE "ARYMP"."PROJECT" 	ADD CONSTRAINT "PK_PROJECT" PRIMARY KEY		("PROJNO")</statement><statement stmt_id="24">CREATE INDEX "ARYMP"."XPROJ2" ON "ARYMP"."PROJECT" 		("RESPEMP" ASC)		ALLOW REVERSE SCANS</statement><statement stmt_id="25"> CREATE TABLE "ARYMP"."PROJACT"  (		  "PROJNO" CHAR(6) NOT NULL , 		  "ACTNO" SMALLINT NOT NULL , 		  "ACSTAFF" DECIMAL(5,2) , 		  "ACSTDATE" DATE NOT NULL , 		  "ACENDATE" DATE )   		 IN "arympts"</statement><statement stmt_id="26">ALTER TABLE "ARYMP"."PROJACT" 	ADD CONSTRAINT "PK_PROJACT" PRIMARY KEY		("PROJNO",		 "ACTNO",		 "ACSTDATE")</statement><statement stmt_id="27"> CREATE TABLE "ARYMP"."EMPPROJACT"  (		  "EMPNO" CHAR(6) NOT NULL , 		  "PROJNO" CHAR(6) NOT NULL , 		  "ACTNO" SMALLINT NOT NULL , 		  "EMPTIME" DECIMAL(5,2) , 		  "EMSTDATE" DATE , 		  "EMENDATE" DATE )   		 IN "arympts"</statement><statement stmt_id="28"> CREATE TABLE "ARYMP"."ACT"  (		  "ACTNO" SMALLINT NOT NULL , 		  "ACTKWD" CHAR(6) NOT NULL , 		  "ACTDESC" VARCHAR(20) NOT NULL )   		 IN "arympts"</statement><statement stmt_id="29">ALTER TABLE "ARYMP"."ACT" 	ADD CONSTRAINT "PK_ACT" PRIMARY KEY		("ACTNO")</statement><statement stmt_id="30">CREATE UNIQUE INDEX "ARYMP"."XACT2" ON "ARYMP"."ACT" 		("ACTNO" ASC,		 "ACTKWD" ASC)		ALLOW REVERSE SCANS</statement><statement stmt_id="31"> CREATE TABLE "ARYMP"."IN_TRAY"  (		  "RECEIVED" TIMESTAMP  not null primary key,		  "SOURCE" CHAR(8) , 		  "SUBJECT" CHAR(64) , 		  "NOTE_TEXT" VARCHAR(3000) )   		 IN "arympts"</statement><statement stmt_id="32"> CREATE TABLE "ARYMP"."ORG"  (		  "DEPTNUMB" SMALLINT NOT NULL , 		  "DEPTNAME" VARCHAR(14) , 		  "MANAGER" SMALLINT , 		  "DIVISION" VARCHAR(10) , 		  "LOCATION" VARCHAR(13) )   		 IN "arympts"</statement><statement stmt_id="33"> CREATE TABLE "ARYMP"."STAFF"  (		  "ID" SMALLINT NOT NULL , 		  "NAME" VARCHAR(9) , 		  "DEPT" SMALLINT , 		  "JOB" CHAR(5) , 		  "YEARS" SMALLINT , 		  "SALARY" DECIMAL(7,2) , 		  "COMM" DECIMAL(7,2) )   		 IN "arympts"</statement><statement stmt_id="34"> CREATE TABLE "ARYMP"."SALES"  (		  "SALES_DATE" DATE , 		  "SALES_PERSON" VARCHAR(15) , 		  "REGION" VARCHAR(15) , 		  "SALES" INTEGER )   		 IN "arympts"</statement><statement stmt_id="35"> CREATE TABLE "ARYMP"."EMPMDC"  (		  "EMPNO" INTEGER not null primary key,		  "DEPT" INTEGER , 		  "DIV" INTEGER )   		 IN "ARYMPTESTTS"  		 ORGANIZE BY ( 		  ( "DEPT" ) , 		  ( "DIV" ) )</statement><statement stmt_id="36"> CREATE TABLE "ARYMP"."PRODUCT"  (		  "PID" VARCHAR(10) NOT NULL , 		  "NAME" VARCHAR(128) , 		  "PRICE" DECIMAL(30,2) , 		  "PROMOPRICE" DECIMAL(30,2) , 		  "PROMOSTART" DATE , 		  "PROMOEND" DATE , 		  "DESCRIPTION" XML )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="37">ALTER TABLE "ARYMP"."PRODUCT" 	ADD CONSTRAINT "PK_PRODUCT" PRIMARY KEY		("PID")</statement><statement stmt_id="38">CREATE INDEX "ARYMP"."PROD_DETAIL_XMLIDX" ON "ARYMP"."PRODUCT" 		("DESCRIPTION" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/product/description/detail'		  AS SQL VARCHAR  HASHED IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="39">CREATE INDEX "ARYMP"."PROD_NAME_XMLIDX" ON "ARYMP"."PRODUCT" 		("DESCRIPTION" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/product/description/name'		  AS SQL VARCHAR  ( 128 ) IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="40"> CREATE TABLE "ARYMP"."INVENTORY"  (		  "PID" VARCHAR(10) NOT NULL , 		  "QUANTITY" INTEGER , 		  "LOCATION" VARCHAR(128) )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="41">ALTER TABLE "ARYMP"."INVENTORY" 	ADD CONSTRAINT "PK_INVENTORY" PRIMARY KEY		("PID")</statement><statement stmt_id="42"> CREATE TABLE "ARYMP"."CUSTOMER"  (		  "CID" BIGINT NOT NULL , 		  "INFO" XML , 		  "HISTORY" XML )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="43">ALTER TABLE "ARYMP"."CUSTOMER" 	ADD CONSTRAINT "PK_CUSTOMER" PRIMARY KEY		("CID")</statement><statement stmt_id="44">CREATE UNIQUE INDEX "ARYMP"."CUST_CID_XMLIDX" ON "ARYMP"."CUSTOMER" 		("INFO" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/customerinfo/@Cid'		  AS SQL DOUBLE   IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="45">CREATE INDEX "ARYMP"."CUST_NAME_XMLIDX" ON "ARYMP"."CUSTOMER" 		("INFO" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/customerinfo/name'		  AS SQL VARCHAR  ( 50 ) IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="46">CREATE INDEX "ARYMP"."CUST_PHONES_XMLIDX" ON "ARYMP"."CUSTOMER" 		("INFO" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/customerinfo/phone'		  AS SQL VARCHAR  ( 25 ) IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="47">CREATE INDEX "ARYMP"."CUST_PHONET_XMLIDX" ON "ARYMP"."CUSTOMER" 		("INFO" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/customerinfo/phone/@type'		  AS SQL VARCHAR  ( 25 ) IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="48"> CREATE TABLE "ARYMP"."PURCHASEORDER"  (		  "POID" BIGINT NOT NULL , 		  "STATUS" VARCHAR(10) NOT NULL WITH DEFAULT 'Unshipped' , 		  "CUSTID" BIGINT , 		  "ORDERDATE" DATE , 		  "PORDER" XML , 		  "COMMENTS" VARCHAR(1000) )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="49">ALTER TABLE "ARYMP"."PURCHASEORDER" 	ADD CONSTRAINT "PK_PURCHASEORDER" PRIMARY KEY		("POID")</statement><statement stmt_id="50">CREATE INDEX "ARYMP"."PO_CID_XMLIDX" ON "ARYMP"."PURCHASEORDER" 		("PORDER" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/PurchaseOrder/@Cid'		  AS SQL DOUBLE   IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="51">CREATE INDEX "ARYMP"."PO_PRODS_XMLIDX" ON "ARYMP"."PURCHASEORDER" 		("PORDER" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/PurchaseOrder/itemlist/item/product/@pid'		  AS SQL DOUBLE   IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="52">CREATE INDEX "ARYMP"."PO_ZIP_XMLIDX" ON "ARYMP"."PURCHASEORDER" 		("PORDER" ASC)		GENERATE KEY USING XMLPATTERN 'declare default element namespace "http://posample.org";/PurchaseOrder/customerAdr/addr/pcode-zip'		  AS SQL VARCHAR  ( 16 ) IGNORE INVALID VALUES ALLOW REVERSE SCANS</statement><statement stmt_id="53"> CREATE TABLE "ARYMP"."CATALOG"  (		  "NAME" VARCHAR(128) NOT NULL , 		  "CATLOG" XML )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="54">ALTER TABLE "ARYMP"."CATALOG" 	ADD CONSTRAINT "PK_CATALOG" PRIMARY KEY		("NAME")</statement><statement stmt_id="55"> CREATE TABLE "ARYMP"."SUPPLIERS"  (		  "SID" VARCHAR(10) NOT NULL , 		  "ADDR" XML )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="56">ALTER TABLE "ARYMP"."SUPPLIERS" 	ADD CONSTRAINT "PK_PRODUCTSUPPLIER" PRIMARY KEY		("SID")</statement><statement stmt_id="57"> CREATE TABLE "ARYMP"."PRODUCTSUPPLIER"  (		  "PID" VARCHAR(10) NOT NULL , 		  "SID" VARCHAR(10) NOT NULL )   		 IN "ARYMPTESTXMLTS"</statement><statement stmt_id="58">ALTER TABLE "ARYMP"."PRODUCTSUPPLIER" 	ADD CONSTRAINT "PK_PRODUCTSUPPLIER" PRIMARY KEY		("PID",		 "SID")</statement><statement stmt_id="59">ALTER TABLE "ARYMP"."DEPARTMENT" 	ADD CONSTRAINT "RDE" FOREIGN KEY		("MGRNO")	REFERENCES "ARYMP"."EMPLOYEE"		("EMPNO")	ON DELETE SET NULL	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="60">ALTER TABLE "ARYMP"."DEPARTMENT" 	ADD CONSTRAINT "ROD" FOREIGN KEY		("ADMRDEPT")	REFERENCES "ARYMP"."DEPARTMENT"		("DEPTNO")	ON DELETE CASCADE	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="61">ALTER TABLE "ARYMP"."EMPLOYEE" 	ADD CONSTRAINT "RED" FOREIGN KEY		("WORKDEPT")	REFERENCES "ARYMP"."DEPARTMENT"		("DEPTNO")	ON DELETE SET NULL	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="62">ALTER TABLE "ARYMP"."EMPLOYEE" 	ADD CONSTRAINT "NUMBER" CHECK 		(PHONENO &gt;= '0000' AND PHONENO &lt;= '9999')	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="63">ALTER TABLE "ARYMP"."EMP_PHOTO" 	ADD CONSTRAINT "FK_EMP_PHOTO" FOREIGN KEY		("EMPNO")	REFERENCES "ARYMP"."EMPLOYEE"		("EMPNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="64">ALTER TABLE "ARYMP"."EMP_RESUME" 	ADD CONSTRAINT "FK_EMP_RESUME" FOREIGN KEY		("EMPNO")	REFERENCES "ARYMP"."EMPLOYEE"		("EMPNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="65">ALTER TABLE "ARYMP"."PROJECT" 	ADD CONSTRAINT "FK_PROJECT_1" FOREIGN KEY		("DEPTNO")	REFERENCES "ARYMP"."DEPARTMENT"		("DEPTNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="66">ALTER TABLE "ARYMP"."PROJECT" 	ADD CONSTRAINT "FK_PROJECT_2" FOREIGN KEY		("RESPEMP")	REFERENCES "ARYMP"."EMPLOYEE"		("EMPNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="67">ALTER TABLE "ARYMP"."PROJECT" 	ADD CONSTRAINT "RPP" FOREIGN KEY		("MAJPROJ")	REFERENCES "ARYMP"."PROJECT"		("PROJNO")	ON DELETE CASCADE	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="68">ALTER TABLE "ARYMP"."PROJACT" 	ADD CONSTRAINT "RPAP" FOREIGN KEY		("PROJNO")	REFERENCES "ARYMP"."PROJECT"		("PROJNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="69">ALTER TABLE "ARYMP"."EMPPROJACT" 	ADD CONSTRAINT "REPAPA" FOREIGN KEY		("PROJNO",		 "ACTNO",		 "EMSTDATE")	REFERENCES "ARYMP"."PROJACT"		("PROJNO",		 "ACTNO",		 "ACSTDATE")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="70">ALTER TABLE "ARYMP"."ACT" 	ADD CONSTRAINT "RPAA" FOREIGN KEY		("ACTNO")	REFERENCES "ARYMP"."ACT"		("ACTNO")	ON DELETE RESTRICT	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="71">ALTER TABLE "ARYMP"."PURCHASEORDER" 	ADD CONSTRAINT "FK_PO_CUST" FOREIGN KEY		("CUSTID")	REFERENCES "ARYMP"."CUSTOMER"		("CID")	ON DELETE CASCADE	ON UPDATE NO ACTION	ENFORCED	ENABLE QUERY OPTIMIZATION</statement><statement stmt_id="80">CREATE ALIAS "ARYMP"."DEPT" FOR "ARYMP"."DEPARTMENT"</statement><statement stmt_id="81">CREATE ALIAS "ARYMP"."EMP" FOR "ARYMP"."EMPLOYEE"</statement><statement stmt_id="82">CREATE ALIAS "ARYMP"."EMPACT" FOR "ARYMP"."EMPPROJACT"</statement><statement stmt_id="83">CREATE ALIAS "ARYMP"."EMP_ACT" FOR "ARYMP"."EMPPROJACT"</statement><statement stmt_id="84">CREATE ALIAS "ARYMP"."PROJ" FOR "ARYMP"."PROJECT"</statement></SQL></testcasesetup>